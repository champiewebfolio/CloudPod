<?php

namespace Proxies\__CG__\CloudPod\ClassroomBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Classroom extends \CloudPod\ClassroomBundle\Entity\Classroom implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getClassID()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["classID"];
        }
        $this->__load();
        return parent::getClassID();
    }

    public function setClassKey($classKey)
    {
        $this->__load();
        return parent::setClassKey($classKey);
    }

    public function getClassKey()
    {
        $this->__load();
        return parent::getClassKey();
    }

    public function setClassName($className)
    {
        $this->__load();
        return parent::setClassName($className);
    }

    public function getClassName()
    {
        $this->__load();
        return parent::getClassName();
    }

    public function setClassDesc($classDesc)
    {
        $this->__load();
        return parent::setClassDesc($classDesc);
    }

    public function getClassDesc()
    {
        $this->__load();
        return parent::getClassDesc();
    }

    public function setClassCreatedAt($classCreatedAt)
    {
        $this->__load();
        return parent::setClassCreatedAt($classCreatedAt);
    }

    public function getClassCreatedAt()
    {
        $this->__load();
        return parent::getClassCreatedAt();
    }

    public function setClassCreatedBy(\CloudPod\UserBundle\Entity\User $classCreatedBy)
    {
        $this->__load();
        return parent::setClassCreatedBy($classCreatedBy);
    }

    public function getClassCreatedBy()
    {
        $this->__load();
        return parent::getClassCreatedBy();
    }

    public function addClassUser(\CloudPod\UserBundle\Entity\User $classUsers)
    {
        $this->__load();
        return parent::addClassUser($classUsers);
    }

    public function removeClassUser(\CloudPod\UserBundle\Entity\User $classUsers)
    {
        $this->__load();
        return parent::removeClassUser($classUsers);
    }

    public function getClassUsers()
    {
        $this->__load();
        return parent::getClassUsers();
    }

    public function addClassLesson(\CloudPod\ClassroomBundle\Entity\Lessons $classLesson)
    {
        $this->__load();
        return parent::addClassLesson($classLesson);
    }

    public function removeClassLesson(\CloudPod\ClassroomBundle\Entity\Lessons $classLesson)
    {
        $this->__load();
        return parent::removeClassLesson($classLesson);
    }

    public function getClassLesson()
    {
        $this->__load();
        return parent::getClassLesson();
    }

    public function addClassAnnouncement(\CloudPod\ClassroomBundle\Entity\Announcements $classAnnouncement)
    {
        $this->__load();
        return parent::addClassAnnouncement($classAnnouncement);
    }

    public function removeClassAnnouncement(\CloudPod\ClassroomBundle\Entity\Announcements $classAnnouncement)
    {
        $this->__load();
        return parent::removeClassAnnouncement($classAnnouncement);
    }

    public function getClassAnnouncement()
    {
        $this->__load();
        return parent::getClassAnnouncement();
    }

    public function setClassKeySalt($classKeySalt)
    {
        $this->__load();
        return parent::setClassKeySalt($classKeySalt);
    }

    public function getClassKeySalt()
    {
        $this->__load();
        return parent::getClassKeySalt();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'classID', 'classKey', 'classKeySalt', 'className', 'classDesc', 'classCreatedAt', 'classCreatedBy', 'classUsers', 'classLesson', 'classAnnouncement');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}